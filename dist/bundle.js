!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";n.r(t),n.d(t,"Read",(function(){return r}));var r=function(){function e(){}return e.prototype.readTextFile=function(e,t){var n=new XMLHttpRequest;n.overrideMimeType("application/json"),n.open("GET",e,!0),n.onreadystatechange=function(){4===n.readyState&&"200"==n.status&&t(n.responseText)},n.send(null)},e}()},function(e,t,n){"use strict";n.r(t),n.d(t,"Checked_symbol",(function(){return r}));var r=function(){function e(){}return e.prototype.checked=function(){document.getElementById("myUL").addEventListener("click",(function(e){var t=e.target;"LI"===t.tagName&&t.classList.toggle("checked")}),!1)},e}()},function(e,t,n){"use strict";n.r(t),n.d(t,"Init_DelButton",(function(){return r}));var r=function(){function e(){}return e.prototype.add=function(){for(var e=document.getElementsByTagName("LI"),t=0;t<e.length;t++){var n=document.createElement("SPAN"),r=document.createTextNode("×");n.className="close",n.appendChild(r),e[t].appendChild(n)}},e}()},function(e,t,n){"use strict";n.r(t),n.d(t,"NewElement",(function(){return r}));var r=function(){function e(){}return e.prototype.create=function(){var e=document.createElement("li");e.className="element";var t=document.getElementById("myInput").value,n=document.createTextNode(t);e.appendChild(n),""===t?alert("You must write something!"):document.getElementById("myUL").appendChild(e),document.getElementById("myInput").value="";var r=document.createElement("SPAN"),o=document.createTextNode("×");r.className="close",r.appendChild(o),e.appendChild(r)},e}()},function(e,t,n){"use strict";n.r(t),n.d(t,"Close",(function(){return r}));var r=function(){function e(){}return e.prototype.delet=function(e){e.parentElement.remove()},e}()},function(e,t,n){n(0),n(6),n(2),n(4),n(3),n(1)},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(1),c=n(2),u=n(3),a=n(4);window.onload=function(){var e=new c.Init_DelButton,t=new o.Checked_symbol,n=new u.NewElement,d=new a.Close;(new r.Read).readTextFile("../data.json",(function(r){for(var o=JSON.parse(r),c=0;c<o.length;c++){var u=document.createElement("li");1==o[c].check?u.className="element checked":u.className="element";var a=document.createTextNode(o[c].info);u.appendChild(a),document.getElementById("myUL").appendChild(u)}t.checked(),e.add(),document.getElementById("addbtn").onclick=function(){n.create()},document.getElementById("myUL").addEventListener("click",(function(e){var t=e.target;"SPAN"===t.tagName&&"close"===t.className&&d.delet(t)}),!1)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,