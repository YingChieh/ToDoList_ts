!function(e){var t={};function n(r){if(t[r])return t[r].exports;var c=t[r]={i:r,l:!1,exports:{}};return e[r].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)n.d(r,c,function(t){return e[t]}.bind(null,c));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";function r(e,t){var n=new XMLHttpRequest;n.overrideMimeType("application/json"),n.open("GET",e,!0),n.onreadystatechange=function(){4===n.readyState&&"200"==n.status&&t(n.responseText)},n.send(null)}n.r(t),n.d(t,"readTextFile",(function(){return r}))},function(e,t,n){"use strict";function r(){document.getElementById("myUL").addEventListener("click",(function(e){var t=e.target;"LI"===t.tagName&&t.classList.toggle("checked")}),!1)}n.r(t),n.d(t,"checked",(function(){return r}))},function(e,t,n){"use strict";function r(){for(var e=document.getElementsByTagName("LI"),t=0;t<e.length;t++){var n=document.createElement("SPAN"),r=document.createTextNode("×");n.className="close",n.appendChild(r),e[t].appendChild(n)}}n.r(t),n.d(t,"addBtn",(function(){return r}))},function(e,t,n){"use strict";function r(){var e=document.createElement("li");e.className="element";var t=document.getElementById("myInput").value,n=document.createTextNode(t);e.appendChild(n),""===t?alert("You must write something!"):document.getElementById("myUL").appendChild(e),document.getElementById("myInput").value="";var r=document.createElement("SPAN"),c=document.createTextNode("×");r.className="close",r.appendChild(c),e.appendChild(r)}n.r(t),n.d(t,"newElement",(function(){return r}))},function(e,t,n){"use strict";function r(e){e.parentElement.remove()}n.r(t),n.d(t,"delet",(function(){return r}))},function(e,t,n){n(0),n(6),n(2),n(4),n(3),n(1)},function(e,t,n){"use strict";n.r(t);var r=n(0),c=n(1),o=n(2),u=n(3),a=n(4);window.onload=function(){Object(r.readTextFile)("../data.json",(function(e){for(var t=JSON.parse(e),n=0;n<t.length;n++){var r=document.createElement("li");1==t[n].check?r.className="element checked":r.className="element";var d=document.createTextNode(t[n].info);r.appendChild(d),document.getElementById("myUL").appendChild(r)}Object(c.checked)(),Object(o.addBtn)(),document.getElementById("addbtn").onclick=function(){Object(u.newElement)()},document.getElementById("myUL").addEventListener("click",(function(e){var t=e.target;"SPAN"===t.tagName&&"close"===t.className&&Object(a.delet)(t)}),!1)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,